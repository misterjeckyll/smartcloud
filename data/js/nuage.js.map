{"version":3,"sources":["nuage.js"],"names":["ajaxGET","url","callback","error","console","log","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","undefined","call","open","send","saveWifi","setRequestHeader","select_ssid","document","getElementById","ssid","options","selectedIndex","value","pwd","scanNetwork","innerHTML","responseText","getSSID","reboot","navItems","querySelectorAll","forEach","element","i","addEventListener","event","e2","i2","classList","remove","add","colorPicker","iro","ColorPicker","wheelLightness","width","display","handleRadius","activeHandleRadius","colors","container","base","sendEffect","effect","request","color","concat","red","green","blue","lum","index","setColors","on","col","clone","current","hsv","h","hue","s","saturation","v","hexString","effects","e","to","elm","state","checked","id","toa","bootstrap","Toast","show"],"mappings":"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","file":"nuage.js","sourcesContent":["function ajaxGET(url, callback, error = undefined) {\r\n    console.log(url);\r\n    let xhttp = new XMLHttpRequest();\r\n    xhttp.onreadystatechange = function () {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n            if(callback !== undefined) callback.call(this);\r\n        }else if(this.readyState === 4 && this.status !== 200){\r\n            if(error !== undefined) error.call(this);\r\n        }\r\n    };\r\n    xhttp.open(\"GET\", url, true);\r\n    xhttp.send();\r\n}\r\n\r\nfunction saveWifi(){\r\n    let xhttp = new XMLHttpRequest();\r\n    xhttp.onreadystatechange = function () {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n            console.log(\"wifi settings saved\");\r\n        }\r\n    };\r\n    xhttp.open(\"POST\", \"/setNetwork\", true);\r\n    xhttp.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\r\n    let select_ssid = document.getElementById(\"ssid\");\r\n    let ssid = select_ssid.options[select_ssid.selectedIndex].value;\r\n    console.log(ssid);\r\n    let pwd = document.getElementById(\"pwd\").value;\r\n    console.log(pwd);\r\n    xhttp.send(\"ssid=\" + ssid + \"&pwd=\" + pwd);\r\n\r\n}\r\n\r\nfunction scanNetwork() {\r\n\r\n    ajaxGET(\"./scanNetwork\", function () {\r\n        document.getElementById(\"ssid\").innerHTML = this.responseText;\r\n    });\r\n}\r\n\r\nfunction getSSID() {\r\n\r\n    ajaxGET(\"./getSSID\", function () {\r\n        document.getElementById(\"cloudSSID\").innerHTML = this.responseText;\r\n    });\r\n}\r\nfunction reboot() {\r\n    ajaxGET(\"./cloudReboot\");\r\n}\r\n\r\n\r\n\r\nvar navItems = document.querySelectorAll(\".mobile-bottom-nav .nav-link, .desktop-top-nav .nav-link\");\r\n\r\nnavItems.forEach(function (element, i) {\r\n\r\n    element.addEventListener(\"click\", function (event) {\r\n        navItems.forEach(function (e2, i2) {\r\n            e2.classList.remove(\"nav-active\");\r\n        });\r\n        this.classList.add(\"nav-active\");\r\n    });\r\n});\r\n\r\ndocument.getElementById(\"reboot-tab\").addEventListener(\"click\", function (event) {\r\n    reboot();\r\n});\r\n\r\n\r\nscanNetwork();\r\ngetSSID();\r\n\r\n\r\nvar colorPicker = new iro.ColorPicker('#picker', {\r\n    wheelLightness: false,\r\n    width:310,\r\n    display:\"inline-block\",\r\n    handleRadius : 9,\r\n    activeHandleRadius : 11,\r\n    colors : [\"rgb(128, 128, 128)\"]\r\n});\r\nlet container = colorPicker.base;\r\nconsole.log(container);\r\n\r\ncolorPicker.setColors([\"rgb(128, 128, 128)\"]);\r\n\r\ncolorPicker.on([\"mount\", \"color:setActive\", \"color:change\"], function () {\r\n    for(let element of document.querySelectorAll(\".colorList\")){\r\n        element.innerHTML = '';\r\n        colorPicker.colors.forEach(color => {\r\n            let col = color.clone();\r\n            if(current != \"/randomblink\"){\r\n                col.hsv = {h: col.hue, s: col.saturation, v: 100};\r\n            }else{\r\n                col.saturation = 0;\r\n            }  \r\n            element.innerHTML += `<div class=\"swatch\" style=\"background: ${ col.hexString }\"></div>`;\r\n        });\r\n    }\r\n\r\n});\r\n\r\nfunction sendEffect(effect) {\r\n    var request;\r\n    switch (effect) {\r\n    case '/simple':\r\n        var color = colorPicker.color;\r\n        request = effect.concat(\"?r=\", color.red, \"&g=\", color.green, \"&b=\", color.blue);\r\n        break;\r\n    case '/randomblink':\r\n        var lum = colorPicker.color.value;\r\n        request = effect.concat(\"?v=\", lum);\r\n        break;\r\n    case '/snake':\r\n        var colors = colorPicker.colors;\r\n        request = effect.concat(\"?d=0\");\r\n        colors.forEach(color => {\r\n            request = request.concat(\"&r\",color.index,\"=\",color.red);\r\n            request = request.concat(\"&g\",color.index,\"=\",color.green);\r\n            request = request.concat(\"&b\",color.index,\"=\",color.blue);\r\n        });\r\n        break;\r\n    default:\r\n        return;\r\n    }\r\n    ajaxGET(request);\r\n}\r\n\r\ncolorPicker.on(\"input:end\",function(color){\r\n    sendEffect(current);\r\n})\r\n\r\nvar effects = [\"randomblink\",\"simple\",\"snake\"];\r\nvar current = \"/randomblink\";\r\ndocument.getElementById(\"effects\").addEventListener('slide.bs.carousel', function (e) {\r\n    current = \"/\"+effects[e.to];\r\n    switch(current){\r\n        case '/simple':\r\n            colorPicker.setColors([\"rgb(15, 71, 128)\"]);\r\n            sendEffect(current);\r\n            break;\r\n        case '/randomblink':\r\n            colorPicker.setColors([\"rgb(128, 128, 128)\"]);\r\n            sendEffect(current);\r\n            break;\r\n        case '/snake':\r\n            colorPicker.setColors([\"rgb(15, 71, 128)\",\"rgb(71, 15, 20)\"]);\r\n            sendEffect(current);\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nfor(let elm of document.querySelectorAll(\".form-switch input\")){\r\n    elm.addEventListener(\"change\",function(e){\r\n        let state = elm.checked;\r\n        var request = \"/\";\r\n        request = request.concat(elm.id, \"?state=\", elm.checked ?1:0);\r\n        ajaxGET(request, function(){\r\n        }, function(){\r\n            elm.checked = !state;\r\n            let toa = document.getElementById(\"toastdisconnected\");\r\n            var toast = new bootstrap.Toast(toa);\r\n            toast.show();\r\n        });\r\n    })\r\n}"]}